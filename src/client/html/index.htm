<!doctype html>
<!--
/*
 * Copyright (c) 2016 Erik NordstrÃ¸m <erik@nordstroem.no>
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
-->
<html lang=en-US>
<meta charset=UTF-8>
<meta name="viewport"
  content="width=device-width, initial-scale=1.0, user-scalable=no">
<title>Klondike</title>
<style>
body { background: #00f; }
#klondike { background: #0f0; }
</style>
<canvas id=klondike width=640 height=480></canvas>
<script>
document.body.addEventListener('touchmove', function(event) {
	event.preventDefault();
}, false);

var c = document.getElementById('klondike');
var ctx = c.getContext('2d');

var cw = 225; // Card width
var ch = 350; // Card height

var card = {};
card.value = 255;
card.x_last = 10;
card.y_last = 10;
card.x_cur = card.x_last;
card.y_cur = card.y_last;

var cursor = {};
cursor.x_down;
cursor.y_down;
cursor.is_dragging = false;
cursor.card = null;

function draw ()
{
	ctx.clearRect(0, 0, c.width, c.height);

	ctx.fillStyle = 'rgb(' + card.value + ',0,0)';
	ctx.fillRect(card.x_cur, card.y_cur, cw, ch);

	if (cursor.is_dragging)
	{
		window.requestAnimationFrame(draw);
	}
}

function pick (e)
{
	var x, y;
	if (e instanceof TouchEvent)
	{
		x = e.touches[0].pageX - c.offsetLeft;
		y = e.touches[0].pageY - c.offsetTop;
	}
	else
	{
		x = e.layerX;
		y = e.layerY;
	}

	var pixel = ctx.getImageData(x, y, 1, 1);
	var card_val = pixel.data[0];

	if (card_val && card_val != 94) // Card, not NULLCARD, not UNKNOWNCARD.
	{
		// TODO: Set cursor.card
		cursor.is_dragging = true;
		cursor.x_down = x;
		cursor.y_down = y;
		window.requestAnimationFrame(draw);
	}
}
c.addEventListener('mousedown', pick);
c.addEventListener('touchstart', pick);

function transpose (e)
{
	if (cursor.is_dragging)
	{
		var x, y;
		if (e instanceof TouchEvent)
		{
			x = e.touches[0].pageX - c.offsetLeft;
			y = e.touches[0].pageY - c.offsetTop;
		}
		else
		{
			x = e.layerX;
			y = e.layerY;
		}

		var x_cur = card.x_last + (x - cursor.x_down);
		var y_cur = card.y_last + (y - cursor.y_down);

		// XXX: Limit x to margins
		card.x_cur = Math.max(0.1 * c.width - cw,
				Math.min(x_cur, 0.9 * c.width));
		// XXX: Limit y to margins
		card.y_cur = Math.max(0.1 * c.height - ch,
				Math.min(y_cur, 0.9 * c.height));
	}
}
c.addEventListener('mousemove', transpose);
c.addEventListener('touchmove', transpose);

function place (e)
{
	cursor.is_dragging = false;
	card.x_last = card.x_cur;
	card.y_last = card.y_cur;
	window.requestAnimationFrame(draw);
}
c.addEventListener('mouseup', place);
c.addEventListener('mouseout', place);
c.addEventListener('touchend', place);

draw();
</script>
